#!/bin/bash
# vim: ts=4 sw=4 expandtab

abort() {
    echo -e "ABORT: $@"
    exit 1
}

log() {
    echo "> $@"
}

check_cmd() {
    local cmd=$1; shift
    type $cmd > /dev/null 2>&1 || abort "$@"
}

check_cmd make "Install GNU Make"
check_cmd kadmin "Install Heimdal Kerberos"
check_cmd python3 "You need python 3"
check_cmd co "You need RCS installed"
check_cmd pts "You need to install OpenAFS"
check_cmd fs "You need to install OpenAFS"

if ! make -v | grep -q "GNU Make"; then
    abort "Make is not GNU Make"
fi

if ! kadmin -v 2>&1 | grep -q "Heimdal"; then
    abort "kadmin is not a Heimdal Kerberos"
fi

if [[ $(klist | grep Principal:) != */admin@STACKEN.KTH.SE ]]; then
    abort "You need admin credentials"
fi

[ ! -e /afs ] && abort "You need to install OpenAFS"
[ ! -e /afs/stacken.kth.se/admin ] && abort "Not connected to Stackens cell"

[ -z "$2" ] && abort "usage: $0 <new-users-name> \"<full name>\""

log "Query finger.json for $1"
./query_finger -u $1 || abort "User missing from finger.json, " \
    "add it and run this script again."

log "Check for $1 in KDC"
if echo get $1 | kadmin -r STACKEN.KTH.SE | grep -q "$1@STACKEN.KTH.SE"; then
    log "Principal $1 exists in KDC, ignore"
else
    log "Add $1 to KDC"
    kadmin -r STACKEN.KTH.SE add \
        --max-ticket-life="10 hours" \
        --max-renewable-life=unlimited \
        --expiration-time="$(date +%Y --date="2 years")-03-15" \
        --pw-expiration-time=never \
        --attributes="requires-pre-auth, disallow-postdated" \
        --policy=default \
        $1
fi

next_passwd_uid() {
    for n in $(seq 18000 19000); do
        if ! grep -q $n master.passwd; then
            echo $n
            break
        fi
    done
}

cd /afs/stacken.kth.se/admin/passwd/
if grep -qE "^$1" master.passwd; then
    log "User $1 is already part of master.passwd"
else
    PASSWD_UID=$(next_passwd_uid)
    log "Add $1 ($2) to master.passwd with UID $PASSWD_UID"
    [ -z $PASSWD_UID ] && abort "No free UID found"
    co -l master.passwd
    echo "$1:*:$PASSWD_UID:30::0:0:$2:/afs/stacken.kth.se/home/$1:/bin/bash" \
        >> master.passwd
    ci -u -m "Added user $1 ($2) with $0" master.passwd
    log "Build database"
    make
fi

log "Setup AFS volume"

if [ -e "/afs/stacken.kth.se/home/$1" ]; then
    log "Home dir for user $1 exists"
else
    /afs/stacken.kth.se/src/script/createuser $1 beef.stacken.kth.se vicepa
    vos release home -c stacken.kth.se
fi

log "Looks good, all done!"
